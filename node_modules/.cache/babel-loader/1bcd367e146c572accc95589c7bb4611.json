{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CL\\\\Downloads\\\\Tourist\\\\Tourist\\\\project\\\\src\\\\component\\\\GoogleMap\\\\GoogleMap.js\";\n// import CurrentLocation from './CurrentLocation';\n// import React, { Component } from 'react';\n// import { Map, GoogleApiWrapper,InfoWindow,Marker } from 'google-maps-react';\n\n// export class MapContainer extends Component {\n//   render() {\n//     const { google, currentLocation } = this.props;\n// console.log('lll',currentLocation)\n//     return (\n//       <Map\n//         google={google}\n//         zoom={11}\n//         initialCenter={currentLocation}\n//         center={currentLocation}\n//       >\n//         <Marker  position={currentLocation} />\n//       </Map>\n//     );\n//   }\n// }\n\n// export default GoogleApiWrapper({\n//   apiKey: 'AIzaSyC6xvlbMFrLYt9ExmJvyFnd5pawC_Al4rs'\n// })(MapContainer);\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass HotelMap extends Component {\n  constructor(props) {\n    super(props);\n    this.calculateDistance = hotel => {\n      const {\n        currentPosition\n      } = this.state;\n      if (currentPosition) {\n        const distance = google.maps.geometry.spherical.computeDistanceBetween(new google.maps.LatLng(currentPosition.lat, currentPosition.lng), new google.maps.LatLng(hotel.lat, hotel.lng));\n        return distance;\n      }\n      return null;\n    };\n    this.state = {\n      currentPosition: null,\n      nearbyHotels: [{\n        name: 'Hotel A',\n        lat: 37.7749,\n        lng: -122.4194\n      }, {\n        name: 'Hotel B',\n        lat: 37.7897,\n        lng: -122.4016\n      }\n      // Add more hotel data here\n      ]\n    };\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        this.setState({\n          currentPosition: {\n            lat: latitude,\n            lng: longitude\n          }\n        });\n      }, error => {\n        console.error(error);\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }\n  render() {\n    const {\n      google\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Map, {\n        google: google,\n        zoom: 15,\n        initialCenter: this.state.currentPosition,\n        children: [this.state.currentPosition && /*#__PURE__*/_jsxDEV(Marker, {\n          position: this.state.currentPosition,\n          label: \"You are here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), this.state.nearbyHotels.map(hotel => /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: hotel.lat,\n            lng: hotel.lng\n          },\n          label: hotel.name\n        }, hotel.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Calculate Distance to Nearby Hotels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), this.state.nearbyHotels.map(hotel => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [hotel.name, \": \", this.calculateDistance(hotel), \" meters\"]\n        }, hotel.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyC6xvlbMFrLYt9ExmJvyFnd5pawC_Al4rs'\n})(HotelMap);","map":{"version":3,"names":["React","Component","Map","GoogleApiWrapper","Marker","jsxDEV","_jsxDEV","HotelMap","constructor","props","calculateDistance","hotel","currentPosition","state","distance","google","maps","geometry","spherical","computeDistanceBetween","LatLng","lat","lng","nearbyHotels","name","componentDidMount","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","setState","error","console","render","children","zoom","initialCenter","label","fileName","_jsxFileName","lineNumber","columnNumber","map","apiKey"],"sources":["C:/Users/CL/Downloads/Tourist/Tourist/project/src/component/GoogleMap/GoogleMap.js"],"sourcesContent":["\r\n// import CurrentLocation from './CurrentLocation';\r\n// import React, { Component } from 'react';\r\n// import { Map, GoogleApiWrapper,InfoWindow,Marker } from 'google-maps-react';\r\n\r\n// export class MapContainer extends Component {\r\n//   render() {\r\n//     const { google, currentLocation } = this.props;\r\n// console.log('lll',currentLocation)\r\n//     return (\r\n//       <Map\r\n//         google={google}\r\n//         zoom={11}\r\n//         initialCenter={currentLocation}\r\n//         center={currentLocation}\r\n//       >\r\n//         <Marker  position={currentLocation} />\r\n//       </Map>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default GoogleApiWrapper({\r\n//   apiKey: 'AIzaSyC6xvlbMFrLYt9ExmJvyFnd5pawC_Al4rs'\r\n// })(MapContainer);\r\nimport React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\n\r\nclass HotelMap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPosition: null,\r\n      nearbyHotels: [\r\n        { name: 'Hotel A', lat: 37.7749, lng: -122.4194 },\r\n        { name: 'Hotel B', lat: 37.7897, lng: -122.4016 },\r\n        // Add more hotel data here\r\n      ],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        position => {\r\n          const { latitude, longitude } = position.coords;\r\n          this.setState({\r\n            currentPosition: { lat: latitude, lng: longitude },\r\n          });\r\n        },\r\n        error => {\r\n          console.error(error);\r\n        }\r\n      );\r\n    } else {\r\n      console.error(\"Geolocation is not supported by this browser.\");\r\n    }\r\n  }\r\n  calculateDistance = (hotel) => {\r\n    const { currentPosition } = this.state;\r\n    if (currentPosition) {\r\n      const distance = google.maps.geometry.spherical.computeDistanceBetween(\r\n        new google.maps.LatLng(currentPosition.lat, currentPosition.lng),\r\n        new google.maps.LatLng(hotel.lat, hotel.lng)\r\n      );\r\n      return distance;\r\n    }\r\n    return null;\r\n  };\r\n  render() {\r\n    const { google } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Map\r\n          google={google}\r\n          zoom={15}\r\n          initialCenter={this.state.currentPosition}\r\n        >\r\n          {this.state.currentPosition && (\r\n            <Marker\r\n              position={this.state.currentPosition}\r\n              label=\"You are here\"\r\n            />\r\n          )}\r\n          {this.state.nearbyHotels.map(hotel => (\r\n            <Marker\r\n              key={hotel.name}\r\n              position={{ lat: hotel.lat, lng: hotel.lng }}\r\n              label={hotel.name}\r\n            />\r\n            ))}\r\n        </Map>\r\n        <div>\r\n          <h2>Calculate Distance to Nearby Hotels</h2>\r\n          {this.state.nearbyHotels.map(hotel => (\r\n            <p key={hotel.name}>\r\n              {hotel.name}: {this.calculateDistance(hotel)} meters\r\n            </p>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyC6xvlbMFrLYt9ExmJvyFnd5pawC_Al4rs',\r\n})(HotelMap);"],"mappings":"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"},"metadata":{},"sourceType":"module"}