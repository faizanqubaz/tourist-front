{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CL\\\\Downloads\\\\Tourist\\\\Tourist\\\\project\\\\src\\\\component\\\\GoogleMap\\\\GoogleMap.js\";\n// import CurrentLocation from './CurrentLocation';\n// import React, { Component } from 'react';\n// import { Map, GoogleApiWrapper,InfoWindow,Marker } from 'google-maps-react';\n\n// export class MapContainer extends Component {\n//   render() {\n//     const { google, currentLocation } = this.props;\n// console.log('lll',currentLocation)\n//     return (\n//       <Map\n//         google={google}\n//         zoom={11}\n//         initialCenter={currentLocation}\n//         center={currentLocation}\n//       >\n//         <Marker  position={currentLocation} />\n//       </Map>\n//     );\n//   }\n// }\n\n// export default GoogleApiWrapper({\n//   apiKey: 'AIzaSyC6xvlbMFrLYt9ExmJvyFnd5pawC_Al4rs'\n// })(MapContainer);\n\nimport React, { Component } from 'react';\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass HotelMap extends Component {\n  constructor(props) {\n    super(props);\n    this.calculateDistance = () => {\n      const {\n        currentPosition,\n        hotelLocation\n      } = this.state;\n      const {\n        google\n      } = this.props;\n      if (currentPosition && google) {\n        const from = new google.maps.LatLng(currentPosition.lat, currentPosition.lng);\n        const to = new google.maps.LatLng(hotelLocation.lat, hotelLocation.lng);\n        const distance = google.maps.geometry.spherical.computeDistanceBetween(from, to);\n        console.log(`Distance to hotel: ${distance} meters`);\n      }\n    };\n    this.state = {\n      currentPosition: null,\n      hotelLocation: {\n        lat: '36.92388507655352',\n        lng: '75.3565647949157'\n      }\n    };\n  }\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        this.setState({\n          currentPosition: {\n            lat: latitude,\n            lng: longitude\n          }\n        });\n      }, error => {\n        console.error(error);\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Map, {\n        google: this.props.google,\n        initialCenter: this.state.hotelLocation,\n        zoom: 8 // Adjust this value as needed\n        // initialCenter={{\n        //   lat: (this.state.currentPosition.lat + this.state.hotelLocation.lat) / 2,\n        //   lng: (this.state.currentPosition.lng + this.state.hotelLocation.lng) / 2,\n        // }}\n        ,\n        children: [this.state.currentPosition && /*#__PURE__*/_jsxDEV(Marker, {\n          position: this.state.currentPosition,\n          label: \"You are here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: this.state.hotelLocation,\n          label: \"Khunjerab Top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"vvv\",\n        onClick: this.calculateDistance,\n        children: \"Calculate Distance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyC6xvlbMFrLYt9ExmJvyFnd5pawC_Al4rs'\n})(HotelMap);","map":{"version":3,"names":["React","Component","Map","GoogleApiWrapper","Marker","jsxDEV","_jsxDEV","HotelMap","constructor","props","calculateDistance","currentPosition","hotelLocation","state","google","from","maps","LatLng","lat","lng","to","distance","geometry","spherical","computeDistanceBetween","console","log","componentDidMount","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","setState","error","render","children","initialCenter","zoom","label","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","apiKey"],"sources":["C:/Users/CL/Downloads/Tourist/Tourist/project/src/component/GoogleMap/GoogleMap.js"],"sourcesContent":["\r\n// import CurrentLocation from './CurrentLocation';\r\n// import React, { Component } from 'react';\r\n// import { Map, GoogleApiWrapper,InfoWindow,Marker } from 'google-maps-react';\r\n\r\n// export class MapContainer extends Component {\r\n//   render() {\r\n//     const { google, currentLocation } = this.props;\r\n// console.log('lll',currentLocation)\r\n//     return (\r\n//       <Map\r\n//         google={google}\r\n//         zoom={11}\r\n//         initialCenter={currentLocation}\r\n//         center={currentLocation}\r\n//       >\r\n//         <Marker  position={currentLocation} />\r\n//       </Map>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default GoogleApiWrapper({\r\n//   apiKey: 'AIzaSyC6xvlbMFrLYt9ExmJvyFnd5pawC_Al4rs'\r\n// })(MapContainer);\r\n\r\nimport React, { Component } from 'react';\r\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react';\r\n\r\nclass HotelMap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPosition: null,\r\n      hotelLocation: { lat: '36.92388507655352', lng: '75.3565647949157' },\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        position => {\r\n          const { latitude, longitude } = position.coords;\r\n          this.setState({\r\n            currentPosition: { lat: latitude, lng: longitude },\r\n          });\r\n        },\r\n        error => {\r\n          console.error(error);\r\n        }\r\n      );\r\n    } else {\r\n      console.error(\"Geolocation is not supported by this browser.\");\r\n    }\r\n  }\r\n  calculateDistance = () => {\r\n    const { currentPosition, hotelLocation } = this.state;\r\n    const { google } = this.props;\r\n  \r\n    if (currentPosition && google) {\r\n      const from = new google.maps.LatLng(\r\n        currentPosition.lat,\r\n        currentPosition.lng\r\n      );\r\n      const to = new google.maps.LatLng(\r\n        hotelLocation.lat,\r\n        hotelLocation.lng\r\n      );\r\n  \r\n      const distance = google.maps.geometry.spherical.computeDistanceBetween(\r\n        from,\r\n        to\r\n      );\r\n  \r\n      console.log(`Distance to hotel: ${distance} meters`);\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Map\r\n          google={this.props.google}\r\n          initialCenter={this.state.hotelLocation}\r\n          zoom={8} // Adjust this value as needed\r\n          // initialCenter={{\r\n          //   lat: (this.state.currentPosition.lat + this.state.hotelLocation.lat) / 2,\r\n          //   lng: (this.state.currentPosition.lng + this.state.hotelLocation.lng) / 2,\r\n          // }}\r\n        >\r\n          {this.state.currentPosition && (\r\n            <Marker\r\n              position={this.state.currentPosition}\r\n              label=\"You are here\"\r\n            />\r\n          )}\r\n          <Marker\r\n            position={this.state.hotelLocation}\r\n            label=\"Khunjerab Top\"\r\n          />\r\n        </Map>\r\n        <button className='vvv' onClick={this.calculateDistance}>Calculate Distance</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyC6xvlbMFrLYt9ExmJvyFnd5pawC_Al4rs',\r\n})(HotelMap);"],"mappings":"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"},"metadata":{},"sourceType":"module"}