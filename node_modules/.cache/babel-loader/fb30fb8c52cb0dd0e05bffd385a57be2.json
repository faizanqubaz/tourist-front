{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CL\\\\Downloads\\\\Tourist\\\\Tourist\\\\project\\\\src\\\\component\\\\admin_login\\\\add_main_room.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n\n// // const DynamicInputAdder = () => {\n// //   const [numInputs, setNumInputs] = useState(0);\n// //   const [inputList, setInputList] = useState([]);\n\n// //   const handleNumInputsChange = (event) => {\n// //     const count = parseInt(event.target.value);\n// //     setNumInputs(count);\n// //     setInputList(new Array(count).fill(''));\n// //   };\n\n// //   const handleInputChange = (index, value) => {\n// //     const newList = [...inputList];\n// //     newList[index] = value;\n// //     setInputList(newList);\n// //   };\n// //   return (\n// //     <div>\n// //       <h2>Dynamic Input Adder</h2>\n// //       <label htmlFor=\"numInputs\">Number of Inputs:</label>\n// //       <input\n// //         type=\"number\"\n// //         id=\"numInputs\"\n// //         value={numInputs}\n// //         onChange={handleNumInputsChange}\n// //       />\n\n// //       <h3>Inputs:</h3>\n// //       {inputList.map((inputValue, index) => (\n// //         <div key={index}>\n// //           <input\n// //             type=\"text\"\n// //             value={inputValue}\n// //             onChange={(e) => handleInputChange(index, e.target.value)}\n// //           />\n// //         </div>\n// //       ))}\n\n// //       <h3>Input List:</h3>\n// //       <ul>\n// //       {inputList.map((inputValue, index) => (\n// //           <li key={index}>{inputValue}</li>\n// //         ))}\n// //       </ul>\n// //     </div>\n// //   );\n// // };\n\n// // export default DynamicInputAdder;\n\n// import React, { useState } from 'react';\n\n// import RoomAddition from './add_room';\n// import './add_room.css'\n// import { useLocation } from 'react-router-dom';\n\n// const AddMainRoom = () => {\n//     const [formData, setFormData] = useState([\n//         { id: 1, roomnumber: '', roomsize: '',roomprice:'',attachbath:'',availability:'' },\n//         { id: 2, roomnumber: '', roomsize: '',roomprice:'',attachbath:'',availability:'' },\n//         { id: 3, roomnumber: '', roomsize: '',roomprice:'',attachbath:'',availability:'' },\n\n//       ]);\n\n//     const [hotelId, sethotelId] = useState('');\n//     const [hotelname, sethotelname] = useState('');\n//     const location = useLocation();\n//     const hotel_details = location.state;\n\n//   const [rooms, setRooms] = useState([]);\n\n//   const handleRoomsAdded = (newRooms) => {\n//     setRooms([...rooms, ...newRooms]);\n//   };\n//   const [inputList, setInputList] = useState([]);\n\n//   const handleInputChange = (index, value) => {\n//     const newList = [...inputList];\n//     console.log('newww',newList)\n//     newList[index].value = value;\n//     setInputList(newList);\n//   };\n//   return (\n//     <div>\n//         <RoomAddition onRoomsAdded={handleRoomsAdded} hname={hotel_details.name} />\n//       <div className='main_add_room_container'>\n//       <div className=\"hotels-list\">\n//       {rooms.map((hotel, index) => (\n//         <div className=\"hotel-card\" key={index}>\n\n//           <div className=\"hotel-details\">\n//         <div>\n//         <label htmlFor=\"roomnumber\">Room Number:</label>\n//         <input\n//           type=\"text\"\n//           id=\"roomnumber\"\n//           name=\"roomnumber\"\n//         //   value={userData.firstName}\n//         onChange={(e) => handleInputChange(index, e.target.value)}\n\n//         />\n//         </div>\n\n// <div>\n// <label htmlFor=\"roomsize\">Room Size:</label>\n//         <input\n//           type=\"text\"\n//           id=\"roomsize\"\n//           name=\"roomsize\"\n//           onChange={(e) => handleInputChange(index, e.target.value)}\n\n//         //   value={userData.firstName}\n//         //   onChange={handleInputChange}\n//         />\n// </div>\n\n// <div>\n// <label htmlFor=\"roomprice\">Price:</label>\n//         <input\n//           type=\"text\"\n//           id=\"roomprice\"\n//           name=\"roomprice\"\n//           onChange={(e) => handleInputChange(index, e.target.value)}\n\n//         //   value={userData.firstName}\n//         //   onChange={handleInputChange}\n//         />\n// </div>\n\n// <div>\n// <label htmlFor=\"attachbath\">BathRoom:</label>\n//         <input\n//           type=\"text\"\n//           id=\"attachbath\"\n//           name=\"attachbath\"\n//         //   value={userData.firstName}\n//         onChange={(e) => handleInputChange(index, e.target.value)}\n\n//         />\n// </div>\n\n// <div>\n// <label htmlFor=\"availability\">Availability:</label>\n//         <input\n//           type=\"text\"\n//           id=\"availability\"\n//           name=\"availability\"\n//         //   value={userData.firstName}\n//         onChange={(e) => handleInputChange(index, e.target.value)}\n\n//         />\n// </div>\n\n//           </div>\n//         </div>\n//       ))}\n\n//     </div>\n//     <button   className='destination_poters'>SAVE</button> \n//       </div>\n//     </div>\n//   );\n// };\n\n// export default AddMainRoom;\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddMainRoom = () => {\n  _s();\n  const [numForms, setNumForms] = useState(1);\n  const [formFields, setFormFields] = useState([]);\n  const handleNumFormsChange = e => {\n    setNumForms(parseInt(e.target.value));\n    setFormFields([]);\n  };\n  const handleFieldChange = (e, formIndex, fieldIndex, fieldName) => {\n    const updatedFields = [...formFields];\n    updatedFields[formIndex][fieldIndex][fieldName] = e.target.value;\n    setFormFields(updatedFields);\n  };\n  const saveToDatabase = async () => {\n    try {\n      const response = await axios.post('/api/saveFormInfo', formFields);\n      console.log('Data saved:', response.data);\n    } catch (error) {\n      console.error('Error saving data:', error);\n    }\n  };\n  const renderFormFields = formIndex => {\n    return formFields[formIndex].map((field, fieldIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: field.name,\n        onChange: e => handleFieldChange(e, formIndex, fieldIndex, 'name'),\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: field.email,\n        onChange: e => handleFieldChange(e, formIndex, fieldIndex, 'email'),\n        placeholder: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, fieldIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this));\n  };\n  const renderForms = () => {\n    const forms = [];\n    for (let i = 0; i < numForms; i++) {\n      forms.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Form \", i + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), renderFormFields(i)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this));\n    }\n    return forms;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"numForms\",\n      children: \"Number of Forms:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      id: \"numForms\",\n      value: numForms,\n      onChange: handleNumFormsChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), renderForms(), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveToDatabase,\n      children: \"Save to Database\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n};\n_s(AddMainRoom, \"c5FwUZnWyKGCYAtOzPbErlD6CaY=\");\n_c = AddMainRoom;\nexport default AddMainRoom;\nvar _c;\n$RefreshReg$(_c, \"AddMainRoom\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AddMainRoom","_s","numForms","setNumForms","formFields","setFormFields","handleNumFormsChange","e","parseInt","target","value","handleFieldChange","formIndex","fieldIndex","fieldName","updatedFields","saveToDatabase","response","post","console","log","data","error","renderFormFields","map","field","children","type","name","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","email","renderForms","forms","i","push","htmlFor","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/CL/Downloads/Tourist/Tourist/project/src/component/admin_login/add_main_room.js"],"sourcesContent":["// // import React, { useState } from 'react';\r\n\r\n// // const DynamicInputAdder = () => {\r\n// //   const [numInputs, setNumInputs] = useState(0);\r\n// //   const [inputList, setInputList] = useState([]);\r\n\r\n// //   const handleNumInputsChange = (event) => {\r\n// //     const count = parseInt(event.target.value);\r\n// //     setNumInputs(count);\r\n// //     setInputList(new Array(count).fill(''));\r\n// //   };\r\n\r\n// //   const handleInputChange = (index, value) => {\r\n// //     const newList = [...inputList];\r\n// //     newList[index] = value;\r\n// //     setInputList(newList);\r\n// //   };\r\n// //   return (\r\n// //     <div>\r\n// //       <h2>Dynamic Input Adder</h2>\r\n// //       <label htmlFor=\"numInputs\">Number of Inputs:</label>\r\n// //       <input\r\n// //         type=\"number\"\r\n// //         id=\"numInputs\"\r\n// //         value={numInputs}\r\n// //         onChange={handleNumInputsChange}\r\n// //       />\r\n\r\n// //       <h3>Inputs:</h3>\r\n// //       {inputList.map((inputValue, index) => (\r\n// //         <div key={index}>\r\n// //           <input\r\n// //             type=\"text\"\r\n// //             value={inputValue}\r\n// //             onChange={(e) => handleInputChange(index, e.target.value)}\r\n// //           />\r\n// //         </div>\r\n// //       ))}\r\n\r\n// //       <h3>Input List:</h3>\r\n// //       <ul>\r\n// //       {inputList.map((inputValue, index) => (\r\n// //           <li key={index}>{inputValue}</li>\r\n// //         ))}\r\n// //       </ul>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default DynamicInputAdder;\r\n\r\n\r\n\r\n// import React, { useState } from 'react';\r\n\r\n\r\n// import RoomAddition from './add_room';\r\n// import './add_room.css'\r\n// import { useLocation } from 'react-router-dom';\r\n\r\n// const AddMainRoom = () => {\r\n//     const [formData, setFormData] = useState([\r\n//         { id: 1, roomnumber: '', roomsize: '',roomprice:'',attachbath:'',availability:'' },\r\n//         { id: 2, roomnumber: '', roomsize: '',roomprice:'',attachbath:'',availability:'' },\r\n//         { id: 3, roomnumber: '', roomsize: '',roomprice:'',attachbath:'',availability:'' },\r\n        \r\n//       ]);\r\n   \r\n//     const [hotelId, sethotelId] = useState('');\r\n//     const [hotelname, sethotelname] = useState('');\r\n//     const location = useLocation();\r\n//     const hotel_details = location.state;\r\n \r\n\r\n//   const [rooms, setRooms] = useState([]);\r\n \r\n\r\n//   const handleRoomsAdded = (newRooms) => {\r\n//     setRooms([...rooms, ...newRooms]);\r\n//   };\r\n//   const [inputList, setInputList] = useState([]);\r\n\r\n//   const handleInputChange = (index, value) => {\r\n//     const newList = [...inputList];\r\n//     console.log('newww',newList)\r\n//     newList[index].value = value;\r\n//     setInputList(newList);\r\n//   };\r\n//   return (\r\n//     <div>\r\n//         <RoomAddition onRoomsAdded={handleRoomsAdded} hname={hotel_details.name} />\r\n//       <div className='main_add_room_container'>\r\n//       <div className=\"hotels-list\">\r\n//       {rooms.map((hotel, index) => (\r\n//         <div className=\"hotel-card\" key={index}>\r\n         \r\n//           <div className=\"hotel-details\">\r\n//         <div>\r\n//         <label htmlFor=\"roomnumber\">Room Number:</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           id=\"roomnumber\"\r\n//           name=\"roomnumber\"\r\n//         //   value={userData.firstName}\r\n//         onChange={(e) => handleInputChange(index, e.target.value)}\r\n\r\n//         />\r\n//         </div>\r\n\r\n// <div>\r\n// <label htmlFor=\"roomsize\">Room Size:</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           id=\"roomsize\"\r\n//           name=\"roomsize\"\r\n//           onChange={(e) => handleInputChange(index, e.target.value)}\r\n\r\n//         //   value={userData.firstName}\r\n//         //   onChange={handleInputChange}\r\n//         />\r\n// </div>\r\n\r\n// <div>\r\n// <label htmlFor=\"roomprice\">Price:</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           id=\"roomprice\"\r\n//           name=\"roomprice\"\r\n//           onChange={(e) => handleInputChange(index, e.target.value)}\r\n\r\n//         //   value={userData.firstName}\r\n//         //   onChange={handleInputChange}\r\n//         />\r\n// </div>\r\n\r\n// <div>\r\n// <label htmlFor=\"attachbath\">BathRoom:</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           id=\"attachbath\"\r\n//           name=\"attachbath\"\r\n//         //   value={userData.firstName}\r\n//         onChange={(e) => handleInputChange(index, e.target.value)}\r\n\r\n\r\n//         />\r\n// </div>\r\n\r\n// <div>\r\n// <label htmlFor=\"availability\">Availability:</label>\r\n//         <input\r\n//           type=\"text\"\r\n//           id=\"availability\"\r\n//           name=\"availability\"\r\n//         //   value={userData.firstName}\r\n//         onChange={(e) => handleInputChange(index, e.target.value)}\r\n\r\n\r\n//         />\r\n// </div>\r\n            \r\n//           </div>\r\n//         </div>\r\n//       ))}\r\n     \r\n//     </div>\r\n//     <button   className='destination_poters'>SAVE</button> \r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default AddMainRoom;\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AddMainRoom = () => {\r\n  const [numForms, setNumForms] = useState(1);\r\n  const [formFields, setFormFields] = useState([]);\r\n\r\n  const handleNumFormsChange = (e) => {\r\n    setNumForms(parseInt(e.target.value));\r\n    setFormFields([]);\r\n  };\r\n\r\n  const handleFieldChange = (e, formIndex, fieldIndex, fieldName) => {\r\n    const updatedFields = [...formFields];\r\n    updatedFields[formIndex][fieldIndex][fieldName] = e.target.value;\r\n    setFormFields(updatedFields);\r\n  };\r\n  const saveToDatabase = async () => {\r\n    try {\r\n      const response = await axios.post('/api/saveFormInfo', formFields);\r\n      console.log('Data saved:', response.data);\r\n    } catch (error) {\r\n      console.error('Error saving data:', error);\r\n    }\r\n  };\r\n\r\n  const renderFormFields = (formIndex) => {\r\n    return formFields[formIndex].map((field, fieldIndex) => (\r\n      <div key={fieldIndex}>\r\n        <input\r\n          type=\"text\"\r\n          value={field.name}\r\n          onChange={(e) => handleFieldChange(e, formIndex, fieldIndex, 'name')}\r\n          placeholder=\"Name\"\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          value={field.email}\r\n          onChange={(e) => handleFieldChange(e, formIndex, fieldIndex, 'email')}\r\n          placeholder=\"Email\"\r\n        />\r\n\r\n</div>\r\n    ));\r\n  };\r\n\r\n  const renderForms = () => {\r\n    const forms = [];\r\n    for (let i = 0; i < numForms; i++) {\r\n      forms.push(\r\n        <div key={i}>\r\n          <h3>Form {i + 1}</h3>\r\n          {renderFormFields(i)}\r\n        </div>\r\n      );\r\n    }\r\n    return forms;\r\n  };\r\n  return (\r\n    <div>\r\n      <label htmlFor=\"numForms\">Number of Forms:</label>\r\n      <input\r\n        type=\"number\"\r\n        id=\"numForms\"\r\n        value={numForms}\r\n        onChange={handleNumFormsChange}\r\n      />\r\n      {renderForms()}\r\n      <button onClick={saveToDatabase}>Save to Database</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddMainRoom;"],"mappings":";;AAAA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAGA;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMU,oBAAoB,GAAIC,CAAC,IAAK;IAClCJ,WAAW,CAACK,QAAQ,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;IACrCL,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,MAAMM,iBAAiB,GAAGA,CAACJ,CAAC,EAAEK,SAAS,EAAEC,UAAU,EAAEC,SAAS,KAAK;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"},"metadata":{},"sourceType":"module"}